plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.dudgns'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2023.0.0-RC1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.11'  //@authenticationPrincipal는 무시하기위해서 추가
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.0'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.eclipse.angus:angus-mail:2.0.2'
	implementation 'org.redisson:redisson:3.26.0'


	// openfeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.security:spring-security-web:6.2.0'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//json
	implementation 'com.google.code.gson:gson'
	implementation 'org.json:json:20220320'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//commons-lang3
	implementation 'org.apache.commons:commons-lang3'

	//apache http
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
